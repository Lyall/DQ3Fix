#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacterBase

#include "Basic.hpp"

#include "BP_NicolaCharacterBase_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerCharacterBase.BP_PlayerCharacterBase_C
// 0x0030 (0x07A0 - 0x0770)
class ABP_PlayerCharacterBase_C : public ABP_NicolaCharacterBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0768(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       CollisionSoundAmbientCoastArea;                    // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ChastShadows;                                      // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_779[0x3];                                      // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Intensity;                                         // 0x077C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRadius;                                 // 0x0780(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           lightColor;                                        // 0x0784(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetupLanternParamFromTable(struct FGOP_LanternTable& NewParam);
	void Update_Hand_Lamp_Light();
	void ReceiveBeginPlay();
	void OnBeginFieldPlayer();
	void OnBeginTownDungeonPlayer();
	void ExecuteUbergraph_BP_PlayerCharacterBase(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerCharacterBase_C">();
	}
	static class ABP_PlayerCharacterBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerCharacterBase_C>();
	}
};
static_assert(alignof(ABP_PlayerCharacterBase_C) == 0x000010, "Wrong alignment on ABP_PlayerCharacterBase_C");
static_assert(sizeof(ABP_PlayerCharacterBase_C) == 0x0007A0, "Wrong size on ABP_PlayerCharacterBase_C");
static_assert(offsetof(ABP_PlayerCharacterBase_C, UberGraphFrame) == 0x000768, "Member 'ABP_PlayerCharacterBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacterBase_C, CollisionSoundAmbientCoastArea) == 0x000770, "Member 'ABP_PlayerCharacterBase_C::CollisionSoundAmbientCoastArea' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacterBase_C, ChastShadows) == 0x000778, "Member 'ABP_PlayerCharacterBase_C::ChastShadows' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacterBase_C, Intensity) == 0x00077C, "Member 'ABP_PlayerCharacterBase_C::Intensity' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacterBase_C, AttenuationRadius) == 0x000780, "Member 'ABP_PlayerCharacterBase_C::AttenuationRadius' has a wrong offset!");
static_assert(offsetof(ABP_PlayerCharacterBase_C, lightColor) == 0x000784, "Member 'ABP_PlayerCharacterBase_C::lightColor' has a wrong offset!");

}

