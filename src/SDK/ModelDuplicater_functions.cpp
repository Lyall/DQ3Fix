#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelDuplicater

#include "Basic.hpp"

#include "ModelDuplicater_classes.hpp"
#include "ModelDuplicater_parameters.hpp"


namespace SDK
{

// Function ModelDuplicater.DpModelBlueprintFunctionLibrary.ConvertAbsolutePathToVirtualPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           InFilename                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutFilename                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDpModelBlueprintFunctionLibrary::ConvertAbsolutePathToVirtualPath(const class FString& InFilename, class FString* OutFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DpModelBlueprintFunctionLibrary", "ConvertAbsolutePathToVirtualPath");

	Params::DpModelBlueprintFunctionLibrary_ConvertAbsolutePathToVirtualPath Parms{};

	Parms.InFilename = std::move(InFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilename != nullptr)
		*OutFilename = std::move(Parms.OutFilename);

	return Parms.ReturnValue;
}


// Function ModelDuplicater.DpModelBlueprintFunctionLibrary.GetParallelFolderPathFromModelPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           ToFilepath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FromFilepath                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutFilename                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDpModelBlueprintFunctionLibrary::GetParallelFolderPathFromModelPath(const class FString& ToFilepath, const class FString& FromFilepath, class FString* OutFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DpModelBlueprintFunctionLibrary", "GetParallelFolderPathFromModelPath");

	Params::DpModelBlueprintFunctionLibrary_GetParallelFolderPathFromModelPath Parms{};

	Parms.ToFilepath = std::move(ToFilepath);
	Parms.FromFilepath = std::move(FromFilepath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFilename != nullptr)
		*OutFilename = std::move(Parms.OutFilename);

	return Parms.ReturnValue;
}


// Function ModelDuplicater.DpModelBlueprintFunctionLibrary.GetProjectFolderNameFromPath
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           InFilepath                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutProjectName                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UDpModelBlueprintFunctionLibrary::GetProjectFolderNameFromPath(const class FString& InFilepath, class FString* OutProjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DpModelBlueprintFunctionLibrary", "GetProjectFolderNameFromPath");

	Params::DpModelBlueprintFunctionLibrary_GetProjectFolderNameFromPath Parms{};

	Parms.InFilepath = std::move(InFilepath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProjectName != nullptr)
		*OutProjectName = std::move(Parms.OutProjectName);

	return Parms.ReturnValue;
}

}

