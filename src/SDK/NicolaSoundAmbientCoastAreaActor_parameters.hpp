#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NicolaSoundAmbientCoastAreaActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NicolaSoundAmbientCoastAreaActor.NicolaSoundAmbientCoastAreaActor_C.BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function NicolaSoundAmbientCoastAreaActor.NicolaSoundAmbientCoastAreaActor_C.BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'NicolaSoundAmbientCoastAreaActor_C_BndEvt__NicolaSoundAmbientCoastAreaActor_Capsule_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function NicolaSoundAmbientCoastAreaActor.NicolaSoundAmbientCoastAreaActor_C.ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor
// 0x00D0 (0x00D0 - 0x0000)
struct NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor) == 0x000008, "Wrong alignment on NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor");
static_assert(sizeof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor) == 0x0000D0, "Wrong size on NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, EntryPoint) == 0x000000, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000028, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000040, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'NicolaSoundAmbientCoastAreaActor_C_ExecuteUbergraph_NicolaSoundAmbientCoastAreaActor::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");

// Function NicolaSoundAmbientCoastAreaActor.NicolaSoundAmbientCoastAreaActor_C.GetAreaCollisionComponent
// 0x0008 (0x0008 - 0x0000)
struct NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent final
{
public:
	class UCapsuleComponent*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent) == 0x000008, "Wrong alignment on NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent");
static_assert(sizeof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent) == 0x000008, "Wrong size on NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent, ReturnValue) == 0x000000, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionComponent::ReturnValue' has a wrong offset!");

// Function NicolaSoundAmbientCoastAreaActor.NicolaSoundAmbientCoastAreaActor_C.GetAreaCollisionCentralAxis
// 0x0070 (0x0070 - 0x0000)
struct NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis) == 0x000010, "Wrong alignment on NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis");
static_assert(sizeof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis) == 0x000070, "Wrong size on NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis, ReturnValue) == 0x000000, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis::ReturnValue' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis, CallFunc_BreakTransform_Location) == 0x000040, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis, CallFunc_BreakTransform_Rotation) == 0x00004C, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis, CallFunc_BreakTransform_Scale) == 0x000058, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis, CallFunc_GetUpVector_ReturnValue) == 0x000064, "Member 'NicolaSoundAmbientCoastAreaActor_C_GetAreaCollisionCentralAxis::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");

}

