#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MBR_Entry_List2Item

#include "Basic.hpp"

#include "Nicola_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MBR_Entry_List2Item.WB_MBR_Entry_List2Item_C
// 0x0040 (0x0368 - 0x0328)
class UWB_MBR_Entry_List2Item_C final : public UCommonItemWidget
{
public:
	class UImage*                                 ItemCursor;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemCursorNF;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_MBR_Entry_List2Item_Magic_C*        Magic;                                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MonsterImage;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MouseClick;                                        // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_MBR_Entry_List2Item_Status_C*       Status;                                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Flipbook_C*                         WB_Flipbook;                                       // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WindowBG;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MBR_Entry_List2Item_C">();
	}
	static class UWB_MBR_Entry_List2Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MBR_Entry_List2Item_C>();
	}
};
static_assert(alignof(UWB_MBR_Entry_List2Item_C) == 0x000008, "Wrong alignment on UWB_MBR_Entry_List2Item_C");
static_assert(sizeof(UWB_MBR_Entry_List2Item_C) == 0x000368, "Wrong size on UWB_MBR_Entry_List2Item_C");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, ItemCursor) == 0x000328, "Member 'UWB_MBR_Entry_List2Item_C::ItemCursor' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, ItemCursorNF) == 0x000330, "Member 'UWB_MBR_Entry_List2Item_C::ItemCursorNF' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, Magic) == 0x000338, "Member 'UWB_MBR_Entry_List2Item_C::Magic' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, MonsterImage) == 0x000340, "Member 'UWB_MBR_Entry_List2Item_C::MonsterImage' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, MouseClick) == 0x000348, "Member 'UWB_MBR_Entry_List2Item_C::MouseClick' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, Status) == 0x000350, "Member 'UWB_MBR_Entry_List2Item_C::Status' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, WB_Flipbook) == 0x000358, "Member 'UWB_MBR_Entry_List2Item_C::WB_Flipbook' has a wrong offset!");
static_assert(offsetof(UWB_MBR_Entry_List2Item_C, WindowBG) == 0x000360, "Member 'UWB_MBR_Entry_List2Item_C::WindowBG' has a wrong offset!");

}

